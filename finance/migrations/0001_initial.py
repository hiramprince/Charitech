# Generated by Django 5.1 on 2024-09-09 19:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('BankID', models.AutoField(primary_key=True, serialize=False)),
                ('BankName', models.CharField(max_length=100)),
                ('BankAccountNo', models.CharField(max_length=25)),
                ('BankBranch', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentPlatform',
            fields=[
                ('PaymentPlatformId', models.AutoField(primary_key=True, serialize=False)),
                ('PaymentPlatformName', models.CharField(max_length=100)),
                ('PaymentPlatformDescription', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('UserTypeID', models.AutoField(primary_key=True, serialize=False)),
                ('UserTypeName', models.CharField(max_length=100)),
                ('UserTypeDescription', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('OrganizationID', models.AutoField(primary_key=True, serialize=False)),
                ('OrganizationName', models.CharField(max_length=100)),
                ('OrganizationLocation', models.CharField(max_length=100)),
                ('Banks', models.ManyToManyField(to='finance.bank')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('USERID', models.AutoField(primary_key=True, serialize=False)),
                ('UserContact', models.CharField(max_length=100)),
                ('UserLocation', models.CharField(max_length=100)),
                ('UserDepartment', models.CharField(max_length=100)),
                ('Banks', models.ManyToManyField(to='finance.bank')),
                ('Organizations', models.ManyToManyField(to='finance.organization')),
                ('groups', models.ManyToManyField(blank=True, related_name='finance_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='finance_user_permissions_set', to='auth.permission', verbose_name='user permission')),
                ('UserType', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.usertype')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('PaymentID', models.AutoField(primary_key=True, serialize=False)),
                ('PaymentAmount', models.DecimalField(decimal_places=3, max_digits=10)),
                ('PaymentDescription', models.TextField()),
                ('Banks', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.bank')),
                ('PaymentPlatform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.paymentplatform')),
                ('Users', models.ManyToManyField(to='finance.user')),
            ],
        ),
    ]
